import { FormattingOptions } from "../backend/facade";
import { Token } from "antlr4ts";
export declare class GrammarFormatter {
    private tokens;
    private options;
    private outputPipeline;
    private currentIndentation;
    private formattingDisabled;
    private currentLine;
    private currentColumn;
    private singleLineBlockNesting;
    private ranges;
    private currentRangeIndex;
    private rangeStart;
    private alignments;
    private whitespaceList;
    constructor(tokens: Token[]);
    formatGrammar(options: FormattingOptions, start: number, stop: number): [string, number, number];
    private setDefaultOptions;
    private entryIs;
    private lastEntryIs;
    private lineHasNonWhitespaceContent;
    private lastCodeTokenIs;
    private removeLastEntry;
    private removeTrailingTabsAndSpaces;
    private removeTrailingWhitespaces;
    private pushCurrentIndentation;
    private applyLineContinuation;
    private add;
    private tokenFromIndex;
    private computeLineLength;
    private addRaw;
    private addSpace;
    private addLineBreak;
    private ensureMinEmptyLines;
    private getBlockInfo;
    private nonBreakingTrailerAhead;
    private processFormattingCommands;
    private addAlignmentEntry;
    private computeAlignments;
    private columnForEntry;
    private reflowComment;
}
