import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { LexerAdaptor } from './LexerAdaptor';
export declare class ANTLRv4Lexer extends LexerAdaptor {
    static readonly TOKEN_REF = 1;
    static readonly RULE_REF = 2;
    static readonly LEXER_CHAR_SET = 3;
    static readonly DOC_COMMENT = 4;
    static readonly BLOCK_COMMENT = 5;
    static readonly LINE_COMMENT = 6;
    static readonly INT = 7;
    static readonly STRING_LITERAL = 8;
    static readonly UNTERMINATED_STRING_LITERAL = 9;
    static readonly BEGIN_ARGUMENT = 10;
    static readonly BEGIN_ACTION = 11;
    static readonly OPTIONS = 12;
    static readonly TOKENS = 13;
    static readonly CHANNELS = 14;
    static readonly IMPORT = 15;
    static readonly FRAGMENT = 16;
    static readonly LEXER = 17;
    static readonly PARSER = 18;
    static readonly GRAMMAR = 19;
    static readonly PROTECTED = 20;
    static readonly PUBLIC = 21;
    static readonly PRIVATE = 22;
    static readonly RETURNS = 23;
    static readonly LOCALS = 24;
    static readonly THROWS = 25;
    static readonly CATCH = 26;
    static readonly FINALLY = 27;
    static readonly MODE = 28;
    static readonly COLON = 29;
    static readonly COLONCOLON = 30;
    static readonly COMMA = 31;
    static readonly SEMI = 32;
    static readonly LPAREN = 33;
    static readonly RPAREN = 34;
    static readonly LBRACE = 35;
    static readonly RBRACE = 36;
    static readonly RARROW = 37;
    static readonly LT = 38;
    static readonly GT = 39;
    static readonly ASSIGN = 40;
    static readonly QUESTION = 41;
    static readonly STAR = 42;
    static readonly PLUS_ASSIGN = 43;
    static readonly PLUS = 44;
    static readonly OR = 45;
    static readonly DOLLAR = 46;
    static readonly RANGE = 47;
    static readonly DOT = 48;
    static readonly AT = 49;
    static readonly POUND = 50;
    static readonly NOT = 51;
    static readonly ID = 52;
    static readonly WS = 53;
    static readonly END_ARGUMENT = 54;
    static readonly UNTERMINATED_ARGUMENT = 55;
    static readonly ARGUMENT_CONTENT = 56;
    static readonly END_ACTION = 57;
    static readonly UNTERMINATED_ACTION = 58;
    static readonly ACTION_CONTENT = 59;
    static readonly UNTERMINATED_CHAR_SET = 60;
    static readonly OFF_CHANNEL = 2;
    static readonly Argument = 1;
    static readonly Action = 2;
    static readonly Options = 3;
    static readonly Tokens = 4;
    static readonly Channels = 5;
    static readonly LexerCharSet = 6;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void;
    private BEGIN_ARGUMENT_action;
    private END_ARGUMENT_action;
    private END_ACTION_action;
    private static readonly _serializedATNSegments;
    private static readonly _serializedATNSegment0;
    private static readonly _serializedATNSegment1;
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
